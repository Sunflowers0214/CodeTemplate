package ${packageName}.${projectName.toLowerCase()}.test;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import ${pageBean};
import ${packageName}.${projectName.toLowerCase()}.model.${builder.firstToUpper(${tableModel.tableLabel})};
import ${packageName}.${projectName.toLowerCase()}.dao.${builder.firstToUpper(${tableModel.tableLabel})}Dao;

/**
 * @description $tableModel.tableComment数据层测试
 * @author ${author}
 * @createtime $time
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration({"classpath:config/spring/spring-service.xml", "classpath:config/spring/spring-mybatis.xml","classpath:config/spring/${projectName.toLowerCase()}-*.xml"})
public class ${builder.firstToUpper(${tableModel.tableLabel})}DaoTest {

	@Autowired
	private ${builder.firstToUpper(${tableModel.tableLabel})}Dao ${builder.firstToLower(${tableModel.tableLabel})}Dao;

 	@Test
	public void testCrud() {
		System.out.println("添加");
		${builder.firstToUpper(${tableModel.tableLabel})} insert = new ${builder.firstToUpper(${tableModel.tableLabel})}();
		insert = ${builder.firstToLower(${tableModel.tableLabel})}Dao.insert(insert);
		System.out.println(insert);

		System.out.println("单个查询");
		${builder.firstToUpper(${tableModel.tableLabel})} where = new ${builder.firstToUpper(${tableModel.tableLabel})}();
#foreach($field in $tableModel.columnList)
#if(${field.isPrimaryKey()})
		where.set${builder.firstToUpper($field.columnLabel)}(insert.get${builder.firstToUpper($field.columnLabel)}());
#end
#end
		${builder.firstToUpper(${tableModel.tableLabel})} query = ${builder.firstToLower(${tableModel.tableLabel})}Dao.get(where);
		System.out.println(query);

		System.out.println("列表查询");
		${builder.firstToUpper(${tableModel.tableLabel})} listWhere = new ${builder.firstToUpper(${tableModel.tableLabel})}();
		List<${builder.firstToUpper(${tableModel.tableLabel})}> entityList = ${builder.firstToLower(${tableModel.tableLabel})}Dao.getList(listWhere);
		for (${builder.firstToUpper(${tableModel.tableLabel})} entity : entityList){
			System.out.println(entity);
		}

		System.out.println("修改");
		${builder.firstToUpper(${tableModel.tableLabel})} update = new ${builder.firstToUpper(${tableModel.tableLabel})}();
#foreach($field in $tableModel.columnList)
#if(${field.isPrimaryKey()})
		update.set${builder.firstToUpper($field.columnLabel)}(insert.get${builder.firstToUpper($field.columnLabel)}());
#end
#end
		update.setWhere(where);
		int updateCount = ${builder.firstToLower(${tableModel.tableLabel})}Dao.update(update);
		System.out.println(updateCount);

		System.out.println("删除");
		${builder.firstToUpper(${tableModel.tableLabel})} delete = new ${builder.firstToUpper(${tableModel.tableLabel})}();
		delete.setWhere(where);
		int deleteCount = ${builder.firstToLower(${tableModel.tableLabel})}Dao.delete(delete);
		System.out.println(deleteCount);

	}

	@Test
	public void testInsert() {
		${builder.firstToUpper(${tableModel.tableLabel})} insert = new ${builder.firstToUpper(${tableModel.tableLabel})}();
		${builder.firstToLower(${tableModel.tableLabel})}Dao.insert(insert);
	}

	@Test
	public void testDelete() {
		${builder.firstToUpper(${tableModel.tableLabel})} delete = new ${builder.firstToUpper(${tableModel.tableLabel})}();
		${builder.firstToLower(${tableModel.tableLabel})}Dao.delete(delete);
	}

	@Test
	public void testUpdate() {
		${builder.firstToUpper(${tableModel.tableLabel})} update = new ${builder.firstToUpper(${tableModel.tableLabel})}();
		${builder.firstToLower(${tableModel.tableLabel})}Dao.update(update);
	}

	@Test
	public void testGet() {
		${builder.firstToUpper(${tableModel.tableLabel})} entity = new ${builder.firstToUpper(${tableModel.tableLabel})}();
		${builder.firstToLower(${tableModel.tableLabel})}Dao.get(entity);
	}

	@Test
	public void testGetListForPage() {
		Map map = new HashMap();
		Page page = ${builder.firstToLower(${tableModel.tableLabel})}Dao.getListForPage(map, 1, 10);
		System.out.println(page.getTotalRows());
		List entityList = page.getDatalist();
		for (Object entity : entityList){
			System.out.println(entity);
		}
	}

	@Test
	public void testGetList() {
		${builder.firstToUpper(${tableModel.tableLabel})} listWhere = new ${builder.firstToUpper(${tableModel.tableLabel})}();
		List<${builder.firstToUpper(${tableModel.tableLabel})}> entityList = ${builder.firstToLower(${tableModel.tableLabel})}Dao.getList(listWhere);
		for (${builder.firstToUpper(${tableModel.tableLabel})} entity : entityList){
			System.out.println(entity);
		}
	}
}