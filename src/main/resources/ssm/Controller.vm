##首字母大写
#macro(firstToUpper $field)
$field.toUpperCase().substring(0,1)$field.substring(1)##
#end
##首字母小写
#macro(firstToLower $field)
$field.toLowerCase().substring(0,1)$field.substring(1)##
#end
package ${packageName}.${projectName.toLowerCase()}.controller;

import java.util.List;
import java.util.Map;
import com.flysnow.common.base.Page;
import com.flysnow.common.base.Result;
import com.flysnow.common.util.JsonUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.flysnow.common.base.BaseController;
import ${packageName}.${projectName.toLowerCase()}.model.#firstToUpper(${tableInfo.tableLabel});
import ${packageName}.${projectName.toLowerCase()}.service.#firstToUpper(${tableInfo.tableLabel})Service;

/**
 * @description $tableInfo.tabComment控制层
 * @author ${author}
 * @version 1.0.0
 * @createtime $time
 */
@Controller
@RequestMapping("/#firstToLower($tableInfo.tableLabel)")
public class #firstToUpper(${tableInfo.tableLabel})Controller extends BaseController{

	@Autowired
	private #firstToUpper(${tableInfo.tableLabel})Service #firstToLower($tableInfo.tableLabel)Service;

	/**
	 * @description 分页信息查询$tableInfo.tabComment
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/getListForPage")
	@ResponseBody
	public Result getListForPage(String data, Integer pageNo, Integer pageSize, String sort) throws Exception{
		Map map = JsonUtils.jsonToPojo(data, Map.class);
		Page page= #firstToLower($tableInfo.tableLabel)Service.getListForPage(map, pageNo, pageSize, sort);
     	return new Result(page);
	}

	/**
	 * @description $tableInfo.tabComment单条信息查询
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/get")
	@ResponseBody
	public Result get(String data) throws Exception{
		#firstToUpper(${tableInfo.tableLabel}) queryEntity = JsonUtils.jsonToPojo(data,#firstToUpper(${tableInfo.tableLabel}).class);
		#firstToUpper(${tableInfo.tableLabel}) entity= #firstToLower($tableInfo.tableLabel)Service.get(queryEntity);
		return new Result(entity);
	}

	/**
	 * @description 添加$tableInfo.tabComment数据
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/insert")
	@ResponseBody
	public Result insert(String data) throws Exception{
		#firstToUpper(${tableInfo.tableLabel}) insertEntity = JsonUtils.jsonToPojo(data,#firstToUpper(${tableInfo.tableLabel}).class);
		#firstToLower($tableInfo.tableLabel)Service.insert(insertEntity);
		return new Result(insertEntity);
	}

	/**
	 * @description 修改 $tableInfo.tabComment数据
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/modify")
	@ResponseBody
	public Result modify(String data) throws Exception{
		#firstToUpper(${tableInfo.tableLabel}) updateEntity = JsonUtils.jsonToPojo(data,#firstToUpper(${tableInfo.tableLabel}).class);
		#firstToUpper(${tableInfo.tableLabel}) updateWhere = new #firstToUpper(${tableInfo.tableLabel})();
#foreach($field in $tableInfo.columnList)
#if(${field.isPrimaryKey()})
		updateWhere.set#firstToUpper($field.columnLabel)(updateEntity.get#firstToUpper($field.columnLabel)());
#end#end
		updateEntity.setWhere(updateWhere);
		boolean flag = #firstToLower($tableInfo.tableLabel)Service.update(updateEntity);
		return new Result(flag);
	}

	/**
	 * @description 删除$tableInfo.tabComment数据
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Result delete(String data) throws Exception{
		#firstToUpper(${tableInfo.tableLabel}) deleteEntity = JsonUtils.jsonToPojo(data,#firstToUpper(${tableInfo.tableLabel}).class);
		#firstToUpper(${tableInfo.tableLabel}) deleteWhere = new #firstToUpper(${tableInfo.tableLabel})();
#foreach($field in $tableInfo.columnList)
#if(${field.isPrimaryKey()})
		deleteWhere.set#firstToUpper($field.columnLabel)(deleteEntity.get#firstToUpper($field.columnLabel)());
#end#end
		deleteEntity.setWhere(deleteWhere);
		boolean flag = #firstToLower($tableInfo.tableLabel)Service.delete(deleteEntity);
		return new Result(flag);
	}

	/**
	 * @description 不分页查询$tableInfo.tabComment
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/getList")
	@ResponseBody
	public Result getList(String data) throws Exception{
		#firstToUpper(${tableInfo.tableLabel}) queryEntity = JsonUtils.jsonToPojo(data,#firstToUpper(${tableInfo.tableLabel}).class);
		List datalist = #firstToLower($tableInfo.tableLabel)Service.getList(queryEntity);
		return new Result(datalist);
	}

}