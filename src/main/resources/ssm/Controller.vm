package ${packageName}.${projectName.toLowerCase()}.controller;

import java.util.List;
import java.util.Map;
import ${pageBean};
import ${resultBean};
import ${jsonBean};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import ${basePath}.BaseController;
import ${packageName}.${projectName.toLowerCase()}.model.${builder.firstToUpper(${tableModel.tableLabel})};
import ${packageName}.${projectName.toLowerCase()}.service.${builder.firstToUpper(${tableModel.tableLabel})}Service;

/**
 * @description $tableModel.tableComment控制层
 * @author ${author}
 * @version 1.0.0
 * @createtime $time
 */
@Controller
public class ${builder.firstToUpper(${tableModel.tableLabel})}Controller extends BaseController{

	@Autowired
	private ${builder.firstToUpper(${tableModel.tableLabel})}Service ${builder.firstToLower($tableModel.tableLabel)}Service;

	/**
	 * @description 分页查询$tableModel.tableComment
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@PostMapping("/${languagePath.toLowerCase()}/${builder.firstToLower($tableModel.tableLabel)}/get${builder.firstToUpper(${tableModel.tableLabel})}Page")
	public Result get${builder.firstToUpper(${tableModel.tableLabel})}Page(String data, Integer pageNo, Integer pageSize, String pageSort) throws Exception{
		try {
			Map map = JsonUtils.jsonToPojo(data, Map.class);
			Page page= ${builder.firstToLower($tableModel.tableLabel)}Service.get${builder.firstToUpper(${tableModel.tableLabel})}Page(map, pageNo, pageSize, pageSort);
			return new Result(page);
		} catch (Exception e) {
			return new Result(e.getMessage());
		}
	}

	/**
	 * @description 添加$tableModel.tableComment
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@PostMapping("/${languagePath.toLowerCase()}/${builder.firstToLower($tableModel.tableLabel)}/insert${builder.firstToUpper(${tableModel.tableLabel})}")
	public Result insert${builder.firstToUpper(${tableModel.tableLabel})}(String data) throws Exception{
		try {
			${builder.firstToUpper(${tableModel.tableLabel})} insertEntity = JsonUtils.jsonToPojo(data,${builder.firstToUpper(${tableModel.tableLabel})}.class);
			${builder.firstToLower($tableModel.tableLabel)}Service.insert${builder.firstToUpper(${tableModel.tableLabel})}(insertEntity);
			return new Result(insertEntity);
		} catch (Exception e) {
			return new Result(e.getMessage());
		}
	}

	/**
	 * @description 单条查询$tableModel.tableComment
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@PostMapping("/${languagePath.toLowerCase()}/${builder.firstToLower($tableModel.tableLabel)}/get${builder.firstToUpper(${tableModel.tableLabel})}")
	public Result get${builder.firstToUpper(${tableModel.tableLabel})}(String data) throws Exception{
		try {
			${builder.firstToUpper(${tableModel.tableLabel})} queryEntity = JsonUtils.jsonToPojo(data,${builder.firstToUpper(${tableModel.tableLabel})}.class);
			${builder.firstToUpper(${tableModel.tableLabel})} entity= ${builder.firstToLower($tableModel.tableLabel)}Service.get${builder.firstToUpper(${tableModel.tableLabel})}(queryEntity);
			return new Result(entity);
		} catch (Exception e) {
			return new Result(e.getMessage());
		}
	}

	/**
	 * @description 修改$tableModel.tableComment
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@PostMapping("/${languagePath.toLowerCase()}/${builder.firstToLower($tableModel.tableLabel)}/modify${builder.firstToUpper(${tableModel.tableLabel})}")
	public Result modify${builder.firstToUpper(${tableModel.tableLabel})}(String data) throws Exception{
		try {
			${builder.firstToUpper(${tableModel.tableLabel})} updateEntity = JsonUtils.jsonToPojo(data,${builder.firstToUpper(${tableModel.tableLabel})}.class);
			boolean flag = ${builder.firstToLower($tableModel.tableLabel)}Service.update${builder.firstToUpper(${tableModel.tableLabel})}(updateEntity);
			return new Result(flag);
		} catch (Exception e) {
			return new Result(e.getMessage());
		}
	}

	/**
	 * @description 删除$tableModel.tableComment
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@PostMapping("/${languagePath.toLowerCase()}/${builder.firstToLower($tableModel.tableLabel)}/delete${builder.firstToUpper(${tableModel.tableLabel})}")
	public Result delete${builder.firstToUpper(${tableModel.tableLabel})}(String data) throws Exception{
		try {
			${builder.firstToUpper(${tableModel.tableLabel})} deleteEntity = JsonUtils.jsonToPojo(data,${builder.firstToUpper(${tableModel.tableLabel})}.class);
			boolean flag = ${builder.firstToLower($tableModel.tableLabel)}Service.delete${builder.firstToUpper(${tableModel.tableLabel})}(deleteEntity);
			return new Result(flag);
		} catch (Exception e) {
			return new Result(e.getMessage());
		}
	}

	/**
	 * @description 列表查询$tableModel.tableComment
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@PostMapping("/${languagePath.toLowerCase()}/${builder.firstToLower($tableModel.tableLabel)}/get${builder.firstToUpper(${tableModel.tableLabel})}List")
	public Result get${builder.firstToUpper(${tableModel.tableLabel})}List(String data) throws Exception{
		try {
			${builder.firstToUpper(${tableModel.tableLabel})} queryEntity = JsonUtils.jsonToPojo(data,${builder.firstToUpper(${tableModel.tableLabel})}.class);
			List datalist = ${builder.firstToLower($tableModel.tableLabel)}Service.get${builder.firstToUpper(${tableModel.tableLabel})}List(queryEntity);
			return new Result(datalist);
		} catch (Exception e) {
			return new Result(e.getMessage());
		}
	}

}