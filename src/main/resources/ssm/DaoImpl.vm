##首字母大写
#macro(firstToUpper $field)$field.toUpperCase().substring(0,1)$field.substring(1)#end
##首字母小写
#macro(firstToLower $field)$field.toLowerCase().substring(0,1)$field.substring(1)#end
package ${packageName}.${projectName.toLowerCase()}.dao.ibatis;

import java.util.List;
import java.util.Map;
import ${packageName}.${projectName.toLowerCase()}.dao.#firstToUpper(${tableInfo.tableLabel})Dao;
import ${packageName}.${projectName.toLowerCase()}.model.#firstToUpper(${tableInfo.tableLabel});
import com.flysnow.common.util.UUIDUtil;
import com.flysnow.common.base.BaseDao;
import com.flysnow.common.base.Page;

/**
 * @description $tableInfo.tabComment数据层实现
 * @author ${author}
 * @version 1.0.0
 * @createtime $time
 */
public class #firstToUpper(${tableInfo.tableLabel})DaoImpl extends BaseDao implements #firstToUpper(${tableInfo.tableLabel})Dao {

	private static final String NAMESPACE = #firstToUpper(${tableInfo.tableLabel})Dao.class.getName() + ".";

	@Override
	public #firstToUpper(${tableInfo.tableLabel}) insert(#firstToUpper(${tableInfo.tableLabel}) entity){
#foreach($field in $tableInfo.columnList)
#if(${field.isPrimaryKey()})
		entity.set#firstToUpper($field.columnLabel)(UUIDUtil.genKey());
#end
#end
		super.insert(NAMESPACE + "insert#firstToUpper(${tableInfo.tableLabel})", entity);
		return entity;
	}

	@Override
	public int delete(#firstToUpper(${tableInfo.tableLabel}) entity){
		return super.delete(NAMESPACE + "delete#firstToUpper(${tableInfo.tableLabel})", entity);
	}

	@Override
	public int update(#firstToUpper(${tableInfo.tableLabel}) entity){
		return super.update(NAMESPACE + "update#firstToUpper(${tableInfo.tableLabel})", entity);
	}

	@Override
	public #firstToUpper(${tableInfo.tableLabel}) get(#firstToUpper(${tableInfo.tableLabel}) entity){
		return (#firstToUpper(${tableInfo.tableLabel}))super.queryForObject(NAMESPACE + "get#firstToUpper(${tableInfo.tableLabel})", entity);
	}

	@Override
	public List getList(#firstToUpper(${tableInfo.tableLabel}) entity){
		return super.queryForList(NAMESPACE + "get#firstToUpper(${tableInfo.tableLabel})List", entity);
	}

	@Override
	public Page getListForPage(Map map, int pageNo,int pageSize){
		return super.queryForPageHelper(NAMESPACE + "get#firstToUpper(${tableInfo.tableLabel})ListPage", map, pageNo,pageSize);
	}

}
