##首字母大写
#macro(firstToUpper $field)$field.toUpperCase().substring(0,1)$field.substring(1)#end
package ${packageName}.${projectName.toLowerCase()}.dao.ibatis;

import java.util.List;
import java.util.Map;
import ${keyBean};
import ${pageBean};
import ${basePath}.BaseDao;
import ${packageName}.${projectName.toLowerCase()}.dao.#firstToUpper(${tableModel.tableLabel})Dao;
import ${packageName}.${projectName.toLowerCase()}.model.#firstToUpper(${tableModel.tableLabel});

/**
 * @description $tableModel.tableComment数据层实现
 * @author ${author}
 * @version 1.0.0
 * @createtime $time
 */
public class #firstToUpper(${tableModel.tableLabel})DaoImpl extends BaseDao implements #firstToUpper(${tableModel.tableLabel})Dao {

	private static final String NAMESPACE = #firstToUpper(${tableModel.tableLabel})Dao.class.getName();

	@Override
	public #firstToUpper(${tableModel.tableLabel}) insert(#firstToUpper(${tableModel.tableLabel}) entity){
#foreach($field in $tableModel.columnPKList)
		entity.set#firstToUpper($field.columnLabel)(UUIDUtil.genKey());
#end
		super.insert(NAMESPACE + ".insert#firstToUpper(${tableModel.tableLabel})", entity);
		return entity;
	}

	@Override
	public int delete(#firstToUpper(${tableModel.tableLabel}) entity){
		return super.delete(NAMESPACE + ".delete#firstToUpper(${tableModel.tableLabel})", entity);
	}

	@Override
	public int update(#firstToUpper(${tableModel.tableLabel}) entity){
		return super.update(NAMESPACE + ".update#firstToUpper(${tableModel.tableLabel})", entity);
	}

	@Override
	public #firstToUpper(${tableModel.tableLabel}) get(#firstToUpper(${tableModel.tableLabel}) entity){
		return (#firstToUpper(${tableModel.tableLabel}))super.queryForObject(NAMESPACE + ".get#firstToUpper(${tableModel.tableLabel})", entity);
	}

	@Override
	public List getList(#firstToUpper(${tableModel.tableLabel}) entity){
		return super.queryForList(NAMESPACE + ".get#firstToUpper(${tableModel.tableLabel})List", entity);
	}

	@Override
	public Page getForPage(Map map, int pageNo,int pageSize){
		return super.queryForPageHelper(NAMESPACE + ".get#firstToUpper(${tableModel.tableLabel})Page", map, pageNo,pageSize);
	}

}
